const fs = require("fs");
const path = require("path");

module.exports.config = {
  name: "eat",
  version: "1.1",
  hasPermssion: 0,
  credits: "ùó¶ùóµùóÆùóµùóÆùó±ùóÆùòÅ ùó¶ùóîùóõùó® (Modified by Rahat)",
  description: "eat ‡¶≤‡¶ø‡¶ñ‡ßá @mention ‡¶ï‡¶∞‡¶≤‡ßá ‡¶®‡¶ø‡¶ú‡ßá‡¶∞ mp3 ‡¶≠‡¶Ø‡¶º‡ßá‡¶∏ ‡¶™‡¶æ‡¶†‡¶æ‡¶¨‡ßá üòÅ",
  commandCategory: "fun",
  usages: "-eat @mention",
  cooldowns: 5
};

module.exports.run = async ({ api, event }) => {
  const { threadID, messageID, mentions } = event;
  const mentionIDs = Object.keys(mentions);

  if (mentionIDs.length === 0) {
    return api.sendMessage("üòí ‡¶ï‡¶æ‡¶â‡¶ï‡ßá mention ‡¶ï‡¶∞‡ßá ‡¶ñ‡¶æ‡¶ì ‡¶≠‡¶æ‡¶á, ‡¶è‡¶ï‡¶æ ‡¶è‡¶ï‡¶æ ‡¶ñ‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ ‡¶Ø‡¶æ‡¶Ø‡¶º ‡¶®‡¶æ‡¶ï‡¶ø!", threadID, messageID);
  }

  const targetID = mentionIDs[0];
  const targetTag = mentions[targetID].replace("@", "");

  // ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶®‡¶ø‡¶ú‡ßá‡¶∞ ‡¶´‡¶æ‡¶á‡¶≤ ‡¶≤‡ßã‡¶ï‡ßá‡¶∂‡¶®
  const voicesDir = path.join(__dirname, "voices");
  const voiceFiles = [
    path.join(voicesDir, "Khan.mp4.mp3"),
    path.join(voicesDir, "Khan2.mp4.mp3")
  ];

  try {
    // ‡¶™‡ßç‡¶∞‡¶•‡¶Æ‡ßá ‡¶¶‡ßÅ‡¶á‡¶ü‡¶æ ‡¶≠‡¶Ø‡¶º‡ßá‡¶∏ ‡¶è‡¶ï‡ßá ‡¶è‡¶ï‡ßá ‡¶™‡¶æ‡¶†‡¶æ‡¶¨‡ßá
    for (let i = 0; i < voiceFiles.length; i++) {
      const voicePath = voiceFiles[i];
      if (fs.existsSync(voicePath)) {
        await new Promise((resolve) => {
          api.sendMessage(
            { attachment: fs.createReadStream(voicePath) },
            threadID,
            () => resolve(),
            messageID
          );
        });
      } else {
        console.error("Voice file missing:", voicePath);
      }
    }

    // ‡¶∂‡ßá‡¶∑‡ßá mention ‡¶ï‡¶∞‡ßá funny reply ‡¶¶‡¶ø‡¶¨‡ßá
    api.sendMessage({
      body: `üòã ${mentions[targetID]} ‡¶Ü‡¶∞‡ßã ‡¶ñ‡¶æ‡¶¨‡¶ø ü§£üòÅ`,
      mentions: [
        {
          tag: mentions[targetID],
          id: targetID
        }
      ]
    }, threadID, messageID);

  } catch (err) {
    console.error(err);
    api.sendMessage("üò¢ ‡¶ï‡¶ø‡¶õ‡ßÅ ‡¶è‡¶ï‡¶ü‡¶æ ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá ‡¶≠‡¶æ‡¶á, ‡¶Ü‡¶¨‡¶æ‡¶∞ ‡¶ö‡ßá‡¶∑‡ßç‡¶ü‡¶æ ‡¶ï‡¶∞‡ßã!", threadID, messageID);
  }
};
