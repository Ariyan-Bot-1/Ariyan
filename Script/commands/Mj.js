const axios = require("axios");
const fs = require("fs-extra");

let lastImages = []; // ‡¶∂‡ßá‡¶∑‡¶¨‡¶æ‡¶∞ ‡¶ú‡ßá‡¶®‡¶æ‡¶∞‡ßá‡¶ü ‡¶π‡¶ì‡¶Ø‡¶º‡¶æ ‡¶õ‡¶¨‡¶ø‡¶ó‡ßÅ‡¶≤‡ßã ‡¶∞‡¶æ‡¶ñ‡¶¨‡ßã

module.exports.config = {
  name: "mj",
  version: "2.0.0",
  hasPermssion: 0,
  credits: "Rahat",
  description: "Generate AI image like MidJourney with Upscale & Variation",
  commandCategory: "fun",
  usages: "[prompt] | [U1/U2/U3/U4/V1/V2/V3/V4]",
  cooldowns: 5,
};

module.exports.run = async function ({ api, event, args }) {
  const input = args.join(" ");

  if (!input) {
    return api.sendMessage("‚ö†Ô∏è ‡¶è‡¶ï‡¶ü‡¶ø ‡¶™‡ßç‡¶∞‡¶Æ‡ßç‡¶™‡¶ü ‡¶≤‡¶ø‡¶ñ‡ßÅ‡¶®\n\nüëâ ‡¶â‡¶¶‡¶æ‡¶π‡¶∞‡¶£: /mj Cristiano Ronaldo", event.threadID, event.messageID);
  }

  // ‡¶Ø‡¶¶‡¶ø U1..U4 ‡¶¨‡¶æ V1..V4 ‡¶≤‡ßá‡¶ñ‡¶æ ‡¶•‡¶æ‡¶ï‡ßá
  if (/^(U[1-4]|V[1-4])$/i.test(input)) {
    if (lastImages.length === 0) {
      return api.sendMessage("‚ùå ‡¶Ü‡¶ó‡ßá ‡¶è‡¶ï‡¶ü‡¶ø ‡¶™‡ßç‡¶∞‡¶Æ‡ßç‡¶™‡¶ü ‡¶¶‡¶ø‡¶Ø‡¶º‡ßá ‡¶õ‡¶¨‡¶ø ‡¶ú‡ßá‡¶®‡¶æ‡¶∞‡ßá‡¶ü ‡¶ï‡¶∞‡ßÅ‡¶®!", event.threadID, event.messageID);
    }

    let index = parseInt(input[1]) - 1;
    if (input.startsWith("U")) {
      // Upscale (‡¶Æ‡ßÇ‡¶≤ ‡¶õ‡¶¨‡¶ø ‡¶¨‡¶°‡¶º ‡¶ï‡¶∞‡ßá ‡¶™‡¶æ‡¶†‡¶æ‡¶¨‡ßá)
      const upscaleUrl = lastImages[index];
      const imgData = (await axios.get(upscaleUrl, { responseType: "arraybuffer" })).data;
      const path = __dirname + `/cache/mj_upscale_${index + 1}.jpg`;
      fs.writeFileSync(path, Buffer.from(imgData, "binary"));

      return api.sendMessage(
        { body: `üîé Upscaled result (U${index + 1})`, attachment: fs.createReadStream(path) },
        event.threadID,
        () => fs.unlinkSync(path),
        event.messageID
      );
    } else {
      // Variation (‡¶è‡¶ñ‡¶® ‡¶®‡¶§‡ßÅ‡¶® ‡¶∞‚Äç‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶Æ ‡¶õ‡¶¨‡¶ø ‡¶Ü‡¶®‡¶¨‡ßá)
      const response = await axios.get(`https://lexica.art/api/v1/search?q=random`);
      if (!response.data || !response.data.images || response.data.images.length === 0) {
        return api.sendMessage("‚ùå Variation ‡¶ú‡ßá‡¶®‡¶æ‡¶∞‡ßá‡¶ü ‡¶ï‡¶∞‡¶æ ‡¶Ø‡¶æ‡¶Ø‡¶º‡¶®‡¶ø!", event.threadID, event.messageID);
      }

      const variationUrl = response.data.images[0].src;
      const imgData = (await axios.get(variationUrl, { responseType: "arraybuffer" })).data;
      const path = __dirname + `/cache/mj_variation_${index + 1}.jpg`;
      fs.writeFileSync(path, Buffer.from(imgData, "binary"));

      return api.sendMessage(
        { body: `üé® Variation result (V${index + 1})`, attachment: fs.createReadStream(path) },
        event.threadID,
        () => fs.unlinkSync(path),
        event.messageID
      );
    }
  }

  // ‡¶®‡¶§‡ßÅ‡¶® ‡¶™‡ßç‡¶∞‡¶Æ‡ßç‡¶™‡¶ü
  const prompt = input;
  const msg = await api.sendMessage("‚ú® MidJourney process started...\n‡¶Ö‡¶®‡ßÅ‡¶ó‡ßç‡¶∞‡¶π ‡¶ï‡¶∞‡ßá ‡¶Ö‡¶™‡ßá‡¶ï‡ßç‡¶∑‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶® ‚è≥", event.threadID, event.messageID);

  try {
    const response = await axios.get(`https://lexica.art/api/v1/search?q=${encodeURIComponent(prompt)}`);
    if (!response.data || !response.data.images || response.data.images.length === 0) {
      return api.sendMessage("‚ùå ‡¶ï‡ßã‡¶®‡ßã ‡¶õ‡¶¨‡¶ø ‡¶ú‡ßá‡¶®‡¶æ‡¶∞‡ßá‡¶ü ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶≤‡¶æ‡¶Æ ‡¶®‡¶æ!", event.threadID, event.messageID);
    }

    // ‡¶™‡ßç‡¶∞‡¶•‡¶Æ ‡ß™‡¶ü‡¶æ ‡¶õ‡¶¨‡¶ø
    const results = response.data.images.slice(0, 4);
    lastImages = results.map(img => img.src); // future upscale/variation ‡¶è‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø save ‡¶ï‡¶∞‡¶≤‡¶æ‡¶Æ

    let attachments = [];
    for (let i = 0; i < results.length; i++) {
      const imgUrl = results[i].src;
      const imgData = (await axios.get(imgUrl, { responseType: "arraybuffer" })).data;
      const path = __dirname + `/cache/mj_${i}.jpg`;
      fs.writeFileSync(path, Buffer.from(imgData, "binary"));
      attachments.push(fs.createReadStream(path));
    }

    api.sendMessage(
      {
        body: `‚ú® MidJourney process completed\n‚úÖ Prompt: ${prompt}\n\n‚òëÔ∏è Action: U1, U2, U3, U4 | V1, V2, V3, V4`,
        attachment: attachments,
      },
      event.threadID,
      () => {
        for (let i = 0; i < results.length; i++) {
          fs.unlinkSync(__dirname + `/cache/mj_${i}.jpg`);
        }
      },
      event.messageID
    );
  } catch (e) {
    console.log(e);
    api.sendMessage("‚ö†Ô∏è ‡¶ï‡¶ø‡¶õ‡ßÅ ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá, ‡¶Ü‡¶¨‡¶æ‡¶∞ ‡¶ö‡ßá‡¶∑‡ßç‡¶ü‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶®!", event.threadID, event.messageID);
  }
};
