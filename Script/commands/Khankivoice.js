const fs = require("fs");
const path = require("path");

module.exports.config = {
 name: "art",
 version: "1.0.0",
 hasPermssion: 0,
 credits: "ЁЭРВЁЭРШЁЭРБЁЭРДЁЭРС тШвя╕П_ЁЦгШ -ЁЭРБЁЭРОЁЭРУ тЪая╕П ЁЭС╗ЁЭСмЁЭСиЁЭС┤_ тШвя╕П",
 description: "Apply AI art style (anime)",
 commandCategory: "editing",
 usages: "reply to an image",
 cooldowns: 5
};

module.exports.run = async function ({ api, event, args, Users }) {
  if (!event.mentions || Object.keys(event.mentions).length === 0) {
    return api.sendMessage("ржХрж╛рж░рзЛ ржорзЗржирж╢ржи ржХрж░рзЛ ЁЭЧеЁЭЧоЁЭЧ╡ЁЭЧоЁЭШБ Boss ЁЯЩВ", event.threadID, event.messageID);
  }

  try {
    const mentionID = Object.keys(event.mentions)[0];
    const mentionName = event.mentions[mentionID] || (await Users.getName(mentionID));

    const projectRoot = process.cwd();
    // ржкрзНрж░ржержо ржнржпрж╝рзЗрж╕ ржлрж╛ржЗрж▓
    const voiceFile1 = findFileRecursive(projectRoot, "Khan.mp4.mp3");
    // ржжрзНржмрж┐рждрзАржпрж╝ ржнржпрж╝рзЗрж╕ ржлрж╛ржЗрж▓
    const voiceFile2 = findFileRecursive(projectRoot, "Khan2.mp4.mp3");

    if (!voiceFile1 || !voiceFile2) {
      return api.sendMessage(
        `${mentionName} тЪая╕П ржЦрзБржБржЬрзЗржУ рж╕ржм ржнржпрж╝рзЗрж╕ ржлрж╛ржЗрж▓ ржкрж╛ржУржпрж╝рж╛ ржпрж╛ржпрж╝ржирж┐`,
        event.threadID,
        event.messageID
      );
    }

    // рззржо ржнржпрж╝рзЗрж╕ ржкрж╛ржарж╛ржирзЛ
    await api.sendMessage(
      {
        attachment: fs.createReadStream(voiceFile1)
      },
      event.threadID
    );

    // рзиржпрж╝ ржнржпрж╝рзЗрж╕ ржкрж╛ржарж╛ржирзЛ
    await api.sendMessage(
      {
        attachment: fs.createReadStream(voiceFile2)
      },
      event.threadID
    );

    // ржорзЗржирж╢ржи ржорзЗрж╕рзЗржЬ ржкрж╛ржарж╛ржирзЛ
    return api.sendMessage(
      {
        body: `${mentionName} ржЦрж╛ржиржХрж┐рж░ ржкрзЛрж▓рж╛ЁЯлжЁЯТж\nрждрзЛрж░ ржЬржирзНржп ржПржЗ рзиржЯрж╛ ржнржпрж╝рзЗрж╕ ЁЯШП\n ЁЭЧеЁЭЧоЁЭЧ╡ЁЭЧоЁЭШБ ржмрж╕рзЗрж░ ржмржжрж▓рзЗ ржЖржорж┐ ржЪрзБржжрзЗ ржжрж┐рж▓рж╛ржоЁЯТЛЁЯТж`,
        mentions: [{ tag: mentionName, id: mentionID }]
      },
      event.threadID
    );

  } catch (err) {
    console.error("Error in Khanki command:", err);
    return api.sendMessage(
      "рждрзНрж░рзБржЯрж┐ рж╣рж▓рзЗржУ ржнрзЯ ржирзЗржЗ ЁЯЩВ ржмржЯ ржХрзНрж░рзНржпрж╛рж╢ ржХрж░ржмрзЗ ржирж╛, ржХрж┐ржирзНрждрзБ ржнржпрж╝рзЗрж╕ ржлрж╛ржЗрж▓ржЧрзБрж▓рзЛ ржкрж╛ржУржпрж╝рж╛ ржпрж╛ржпрж╝ржирж┐ред",
      event.threadID,
      event.messageID
    );
  }
};
